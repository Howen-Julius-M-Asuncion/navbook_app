on:
  push:
    tags:
      - "v*"

jobs:
  deploy_playstore:
    # Only run this job if the branch name starts with 'release/'
    if:  startsWith(github.head_ref, 'master/')
    name: android store release
    runs-on: ubuntu-latest
    env:
      # Setup env variables that will be used throughout the workflow
      JAVA_VERSION: 12.0
      FLUTTER_VERSION: 3.29.0
      AAB_PATH: build/app/outputs/bundle/release/app-release.aab
      KEYSTORE_PATH: android/upload-keystore.jks
      KEY_PROPS_PATH: android/key.properties
      SERVICE_ACCOUNT_PATH: store_credentials.json
    steps:
      # Checkout repository codebase
      - name: Checkout the code
        uses: actions/checkout@v4

      # Setup Java in the VM
      - name: Setup Java to compile the Android project
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      # Setup Flutter in the VM
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Decode Android env variables
      - name: Decode Android keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ${{ env.KEYSTORE_PATH }}

      - name: Decode Android key properties
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES }}" | base64 --decode > ${{ env.KEY_PROPS_PATH }}

      # Decode Android release Service Account
      - name: Decode Android Service Account
        run: echo "${{ secrets.PLAY_STORE_JSON }}" | base64 --decode > ${{ env.SERVICE_ACCOUNT_PATH }}

      # Run flutter commands
      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üïµÔ∏è Analyze to check for bad Dart/Flutter practices
        run: flutter analyze

      # Build Android Bundle release file
      - name: Build aab
        run: |
          flutter build appbundle --release

      # Upload generated aab to project artifacts
      - name: Upload generated aab to the artifacts
        uses: actions/upload-artifact@master
        with:
          name: aab-stores
          path: {{ env.AAB_PATH }}

      # Deploy bundle to Google Play internal testing
      - name: Deploy to Play Store (Internal testing)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: {{ env.SERVICE_ACCOUNT_PATH }}
          packageName: com.bscs3a.navbook
          releaseFiles: {{ env.AAB_PATH }}
          track: internal
